[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "snake-game"
version = "0.1.0"
description = "A Snake game with LED matrix display and joystick support"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Snake Game Developer", email = "sina.labbaf@gmail.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Games/Entertainment",
    "Topic :: System :: Hardware",
]
requires-python = ">=3.11"
dependencies = [
    "pygame>=2.0.0",
    "adafruit-circuitpython-neopixel-spi>=1.0.0",
    "adafruit-circuitpython-pixelbuf>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=25.1.0",
    "flake8>=7.3.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[project.scripts]
snake = "snake.main"

[project.urls]
Homepage = "https://github.com/laboox/raspberry-pi-snakes"
Repository = "https://github.com/laboox/raspberry-pi-snakes"
Issues = "https://github.com/laboox/raspberry-pi-snakes/issues"

[tool.hatch.build.targets.wheel]
packages = ["snake"]

[tool.black]
line-length = 100
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["snake"]

[tool.flake8]
max-line-length = 100
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg-info",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pygame.*",
    "neopixel_spi.*",
    "board.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=snake",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
